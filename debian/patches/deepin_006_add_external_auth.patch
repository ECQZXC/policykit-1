Index: b/src/polkitagent/polkitagentsession.c
===================================================================
--- a/src/polkitagent/polkitagentsession.c
+++ b/src/polkitagent/polkitagentsession.c
@@ -88,6 +88,7 @@ struct _PolkitAgentSession
 
   gchar *cookie;
   PolkitIdentity *identity;
+  PolkitDetails *details;
 
   GOutputStream *child_stdin;
   int child_stdout;
@@ -111,7 +112,8 @@ enum
 {
   PROP_0,
   PROP_IDENTITY,
-  PROP_COOKIE
+  PROP_COOKIE,
+  PROP_DETAILS
 };
 
 enum
@@ -171,6 +173,9 @@ polkit_agent_session_get_property (GObje
       g_value_set_string (value, session->cookie);
       break;
 
+    case PROP_DETAILS:
+      g_value_set_object(value, session->details);
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -195,6 +200,10 @@ polkit_agent_session_set_property (GObje
       session->cookie = g_value_dup_string (value);
       break;
 
+    case PROP_DETAILS:
+      session->details = g_value_dup_object(value);
+      break;
+
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -246,6 +255,17 @@ polkit_agent_session_class_init (PolkitA
                                                         G_PARAM_STATIC_BLURB |
                                                         G_PARAM_STATIC_NICK));
 
+  g_object_class_install_property (gobject_class,
+                                  PROP_DETAILS,
+                                  g_param_spec_object ("details",
+                                                      "Details",
+                                                      "The details obtained from the PolicyKit daemon",
+                                                      POLKIT_TYPE_DETAILS,
+                                                      G_PARAM_CONSTRUCT_ONLY |
+                                                          G_PARAM_READWRITE |
+                                                          G_PARAM_STATIC_NAME |
+                                                          G_PARAM_STATIC_BLURB |
+                                                          G_PARAM_STATIC_NICK));
   /**
    * PolkitAgentSession::request:
    * @session: A #PolkitAgentSession.
@@ -360,6 +380,24 @@ polkit_agent_session_new (PolkitIdentity
 
   return session;
 }
+
+PolkitAgentSession *
+polkit_agent_session_new_ex(PolkitIdentity *identity,
+                            const gchar *cookie, const PolkitDetails *details)
+{
+  PolkitAgentSession *session;
+
+  g_return_val_if_fail (POLKIT_IS_IDENTITY (identity), NULL);
+  g_return_val_if_fail (cookie != NULL, NULL);
+
+  session = POLKIT_AGENT_SESSION(g_object_new(POLKIT_AGENT_TYPE_SESSION,
+                                              "identity", identity,
+                                              "cookie", cookie,
+                                              "details", details,
+                                              NULL));
+
+  return session;
+}
 
 static void
 kill_helper (PolkitAgentSession *session)
Index: b/src/polkitagent/polkitagentsession.h
===================================================================
--- a/src/polkitagent/polkitagentsession.h
+++ b/src/polkitagent/polkitagentsession.h
@@ -44,6 +44,10 @@ typedef struct _PolkitAgentSessionClass
 GType                polkit_agent_session_get_type    (void) G_GNUC_CONST;
 PolkitAgentSession  *polkit_agent_session_new         (PolkitIdentity      *identity,
                                                        const gchar         *cookie);
+PolkitAgentSession *polkit_agent_session_new_ex(PolkitIdentity *identity,
+                                                const gchar *cookie,
+                                                const PolkitDetails *details);
+
 void                 polkit_agent_session_initiate    (PolkitAgentSession  *session);
 void                 polkit_agent_session_response    (PolkitAgentSession  *session,
                                                        const gchar         *response);
Index: b/src/polkitagent/polkitagenttextlistener.c
===================================================================
--- a/src/polkitagent/polkitagenttextlistener.c
+++ b/src/polkitagent/polkitagenttextlistener.c
@@ -510,7 +510,7 @@ polkit_agent_text_listener_initiate_auth
       g_free (s);
     }
 
-  listener->active_session = polkit_agent_session_new (identity, cookie);
+  listener->active_session = polkit_agent_session_new_ex (identity, cookie, details);
   g_signal_connect (listener->active_session,
                     "completed",
                     G_CALLBACK (on_completed),
Index: b/src/polkitbackend/polkitbackendinteractiveauthority.c
===================================================================
--- a/src/polkitbackend/polkitbackendinteractiveauthority.c
+++ b/src/polkitbackend/polkitbackendinteractiveauthority.c
@@ -2242,6 +2242,16 @@ authentication_agent_initiate_challenge
   add_pid (localized_details, caller, "polkit.caller-pid");
   add_pid (localized_details, subject, "polkit.subject-pid");
 
+  gchar *ex_auth = polkit_details_lookup(details, "exAuth");
+  if (ex_auth) {
+    polkit_details_insert(localized_details,"exAuth", ex_auth);
+
+    gchar* ex_auth_flags = polkit_details_lookup(details, "exAuthFlags");
+    if (ex_auth_flags) {
+      polkit_details_insert(localized_details, "exAuthFlags", ex_auth_flags);
+    }
+  }
+
   details_gvariant = polkit_details_to_gvariant (localized_details);
   g_variant_ref_sink (details_gvariant);
 
