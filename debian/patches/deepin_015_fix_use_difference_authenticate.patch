Index: policykit-1/src/polkitagent/polkitagentsession.c
===================================================================
--- policykit-1.orig/src/polkitagent/polkitagentsession.c
+++ policykit-1/src/polkitagent/polkitagentsession.c
@@ -77,7 +77,7 @@ _show_debug (void)
     }
   return show_debug_value;
 }
-
+static gint da_dbus_get_frame_work_state();
 /**
  * PolkitAgentSession:
  *
@@ -103,6 +103,7 @@ struct _PolkitAgentSession
   gboolean success;
   gboolean helper_is_running;
   gboolean have_emitted_completed;
+  gboolean deepin_authentication_ok;
 };
 
 struct _PolkitAgentSessionClass
@@ -753,16 +754,31 @@ void polkit_agent_session_response_ex(Po
 {
   g_return_if_fail(POLKIT_AGENT_IS_SESSION(session));
   g_return_if_fail(response != NULL);
+  gboolean add_newline;
+  size_t response_len;
+  const char newline[] = "\n";
+  response_len = strlen(response);
 
-  char *json_data = NULL;
-  int json_data_length = 0;
-  gen_auth_ctrl_string_with_wrap(SESSION_CTRL_SET_TOKEN, authFlags, response, &json_data, &json_data_length);
+  add_newline = (response[response_len] != '\n');
 
-  (void)g_output_stream_write_all(session->child_stdin, json_data, json_data_length, NULL, NULL, NULL);
+  if (session->deepin_authentication_ok)
+  {
+    char *json_data = NULL;
+    int json_data_length = 0;
+    gen_auth_ctrl_string_with_wrap(SESSION_CTRL_SET_TOKEN, authFlags, response, &json_data, &json_data_length);
 
-  if (json_data)
+    (void)g_output_stream_write_all(session->child_stdin, json_data, json_data_length, NULL, NULL, NULL);
+
+    if (json_data)
+    {
+      free(json_data);
+    }
+  }
+  else
   {
-    free(json_data);
+    (void)g_output_stream_write_all(session->child_stdin, response, response_len, NULL, NULL, NULL);
+    if (add_newline)
+      (void)g_output_stream_write_all(session->child_stdin, newline, 1, NULL, NULL, NULL);
   }
 }
 
@@ -770,6 +786,10 @@ void polkit_agent_session_ctrl(PolkitAge
 {
   g_return_if_fail(POLKIT_AGENT_IS_SESSION(session));
   g_return_if_fail(ctrl == SESSION_CTRL_OPEN || ctrl == SESSION_CTRL_CLOSE);
+  if (!session->deepin_authentication_ok)
+  {
+    return;
+  }
 
   char *json_data = NULL;
   int json_data_length = 0;
@@ -815,7 +835,7 @@ polkit_agent_session_initiate (PolkitAge
 {
   uid_t uid;
   GError *error;
-  gchar *helper_argv[5];
+  gchar** helper_argv;
   struct passwd *passwd;
   int stdin_fd = -1;
 
@@ -847,29 +867,41 @@ polkit_agent_session_initiate (PolkitAge
       goto error;
     }
 
-  gchar *ex_auth = polkit_details_lookup(session->details, "exAuth");
-
-  helper_argv[0] = PACKAGE_PREFIX "/lib/polkit-1/polkit-agent-helper-deepin";
-  helper_argv[1] = passwd->pw_name;
-  helper_argv[2] = session->cookie;
-  helper_argv[3] = ex_auth ? g_strdup(polkit_details_lookup(session->details, "exAuthFlags")) : g_strdup("-1");
-  helper_argv[4] = NULL;
-
-  session->child_stdout = -1;
-
-  error = NULL;
-  if (!g_spawn_async_with_pipes (NULL,
-                                 (char **) helper_argv,
-                                 NULL,
-                                 G_SPAWN_DO_NOT_REAP_CHILD |
-                                 0,//G_SPAWN_STDERR_TO_DEV_NULL,
-                                 NULL,
-                                 NULL,
-                                 &session->child_pid,
-                                 &stdin_fd,
-                                 &session->child_stdout,
-                                 NULL,
-                                 &error))
+    gchar *ex_auth = polkit_details_lookup(session->details, "exAuth");
+    if (da_dbus_get_frame_work_state() == 1)
+    {
+      session->deepin_authentication_ok = TRUE;
+      helper_argv = g_malloc(sizeof(gchar *) * 5);
+      helper_argv[0] = PACKAGE_PREFIX "/lib/polkit-1/polkit-agent-helper-deepin";
+      helper_argv[2] = session->cookie;
+      helper_argv[3] = ex_auth ? g_strdup(polkit_details_lookup(session->details, "exAuthFlags")) : g_strdup("-1");
+      helper_argv[4] = NULL;
+    }
+    else
+    {
+      session->deepin_authentication_ok = FALSE;
+      helper_argv = g_malloc(sizeof(gchar *) * 3);
+      helper_argv[0] = PACKAGE_PREFIX "/lib/polkit-1/polkit-agent-helper-1";
+      helper_argv[2] = NULL;
+    }
+
+    helper_argv[1] = passwd->pw_name;
+
+    session->child_stdout = -1;
+
+    error = NULL;
+    if (!g_spawn_async_with_pipes(NULL,
+                                  (char **)helper_argv,
+                                  NULL,
+                                  G_SPAWN_DO_NOT_REAP_CHILD |
+                                      0, // G_SPAWN_STDERR_TO_DEV_NULL,
+                                  NULL,
+                                  NULL,
+                                  &session->child_pid,
+                                  &stdin_fd,
+                                  &session->child_stdout,
+                                  NULL,
+                                  &error))
     {
       g_warning ("Cannot spawn helper: %s\n", error->message);
       g_error_free (error);
@@ -900,10 +932,47 @@ polkit_agent_session_initiate (PolkitAge
   return;
 
 error:
-  g_free(helper_argv[3]);
+  if(session->deepin_authentication_ok){
+    g_free(helper_argv[3]);
+  }
+  g_free(helper_argv);
   complete_session (session, FALSE);
 }
 
+static gint da_dbus_get_frame_work_state()
+{
+  GDBusProxy *proxy;
+  gint value;
+
+  proxy = g_dbus_proxy_new_for_bus_sync(G_BUS_TYPE_SYSTEM,
+                                        G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS |
+                                            G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES,
+                                        NULL, "com.deepin.daemon.Authenticate",
+                                        "/com/deepin/daemon/Authenticate",
+                                        "com.deepin.daemon.Authenticate",
+                                        NULL, NULL);
+  GError *callError = NULL;
+  GVariant *ret1 = g_dbus_proxy_call_sync(proxy,
+                                          "org.freedesktop.DBus.Properties.Get",
+                                          g_variant_new("(ss)", "com.deepin.daemon.Authenticate",
+                                                        "FrameworkState"),
+                                          G_DBUS_CALL_FLAGS_NONE,
+                                          -1,
+                                          NULL,
+                                          &callError);
+  if (callError != NULL)
+  {
+    g_print("ERROR %s", callError->message);
+    g_error_free(callError);
+    return -1;
+  }
+  GVariant *ret2 = NULL;
+  g_variant_get(ret1, "(v)", &ret2);
+  g_variant_get(ret2, "i", &value);
+  g_variant_unref(ret1);
+  g_variant_unref(ret2);
+  return value;
+}
 
 /**
  * polkit_agent_session_cancel:
